@baseUrl = http://localhost:8000
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDIzNTc3MzksImV4cCI6MTc0MjQ0NDEzOX0.EE8LD25ahnnp6pfvZCUz6VzNpekGM7FS9W-izw8mBBA

### Health Check
GET {{baseUrl}}/hello

### 1. Register User Credentials
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### 2. Login to get Auth Token
# Run this after registration and copy the token to the @authToken variable above
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### 3. Create User Profile
# This creates a full user profile associated with the email in the JWT token
POST {{baseUrl}}/api/users/profile
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "email": "test@example.com",
  "username": "testuser",
  "bio": "Computer Science student looking for study partners",
  "location": "San Francisco",
  "institution": "Example University",
  "fieldOfStudy": "Computer Science",
  "yearLevel": "Junior",
  "preferredStudyStyle": "visual",
  "preferredStudyEnvironment": "library",
  "preferredGroupSize": "small_group",
  "subjectsLookingToStudy": ["Mathematics", "Computer Science"],
  "preferredStudyTime": "Evenings",
  "timeZone": "UTC-8",
  "studyFrequency": "weekly",
  "weeklyAvailability": {
    "monday": ["14:00-16:00", "18:00-20:00"],
    "tuesday": ["10:00-12:00"],
    "wednesday": ["14:00-16:00", "18:00-20:00"],
    "thursday": ["10:00-12:00"],
    "friday": ["14:00-16:00"],
    "saturday": ["10:00-14:00"],
    "sunday": []
  },
  "displaySettings": {
    "darkMode": true,
    "fontSize": "medium",
    "colorScheme": "blue"
  },
  "notificationSettings": {
    "email": true,
    "push": true,
    "studyRequests": true,
    "messages": true,
    "reminders": true
  },
  "privacySettings": {
    "profileVisibility": "public",
    "showLocation": "approximate",
    "studyAvailabilityPublicity": "connections_only"
  },
  "securitySettings": {
    "lastPasswordChange": "2023-07-15T00:00:00.000Z"
  },
  "accountSettings": {
    "language": "en",
    "emailVerified": true
  }
}

### 4. Get User Profile
# Retrieve the user profile using the JWT token
GET {{baseUrl}}/api/users/profile
Authorization: Bearer {{authToken}}

### 5. Update User Profile (Partial Update)
PUT {{baseUrl}}/api/users/profile
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "email": "test@example.com",
  "bio": "Updated bio information - now studying AI and Machine Learning",
  "location": "Seattle",
  "preferredStudyEnvironment": "cafe"
}

### 5b. Update User Display Settings (Partial Update)
PUT {{baseUrl}}/api/users/profile
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "email": "test@example.com",
  "displaySettings": {
    "darkMode": false,
    "fontSize": "large"
  },
  "preferredStudyTime": "Mornings and Evenings" 
}

### 6. Find Study Partners
GET {{baseUrl}}/api/users/study-partners?subjects=Mathematics,Computer%20Science&preferredStudyEnvironment=LIBRARY
Authorization: Bearer {{authToken}}

### 7. Create Another User for Testing
# First register credentials
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "email": "partner@example.com",
  "password": "password456"
}
